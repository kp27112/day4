#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>
#include <stdbool.h>
#include <sys/types.h>


pthread_mutex_t mtx = PTHREAD_MUTEX_INITIALIZER;
bool s = 1;

void* ping(void* a)
{
	pthread_cond_t* c  = (pthread_cond_t*)a;
	pthread_mutex_lock(&mtx);
	pthread_cond_wait(c,&mtx);

	printf("PING\n");
	pthread_mutex_unlock(&mtx);

	return 0;
}


void* pong(void* a)
{
	pthread_cond_t* c  = (pthread_cond_t*)a;
	pthread_mutex_lock(&mtx);
	pthread_cond_wait(c,&mtx);

	printf("PING\n");
	pthread_mutex_unlock(&mtx);

	return 0;
}



int main(int c, char** v)
{


	pthread_cond_t cond = PTHREAD_COND_INITIALIZER;
	pthread_t t_id;

	pthread_create(&t_id,0,ping,&cond);
	sleep(1);
	pthread_create(&t_id,0,pong,&cond);
	sleep(1);

	pthread_mutex_lock(&mtx);



	printf("PONG \n");

	pthread_cond_signal(&cond);

	pthread_mutex_unlock(&mtx);

	pthread_join(t_id,0);






return 0;
}
